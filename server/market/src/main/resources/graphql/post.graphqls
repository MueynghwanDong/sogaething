type Post{
    postId : ID
    userId : Int
    isBuy : Boolean
    title : String
    saleDate : String
    contents : String
    viewCount : Int
    deal : String
    createdDate : String
    modifiedDate : String
}
input UpdatePostInput{
    postId : Int
    title : String
    contents : String
    deal : String
}

input CreatePostInput{
    uploaderId : Int
    title : String
    saleDate : String
    contents : String
    deal : String
}
type PostOutput{
    postId : ID
    userId : Int
    isBuy : Boolean
    title : String
    contents : String
    viewCount : Int
    deal : String
}

type RecentPostResponse {
    postId: String
    user: User
    hashTags: [Hashtag]
    isBuy: Boolean
    price: Int
    saleDate: String
    imgUrls: [File]
    category: String
    deal: String
    createdDate: String
    modifiedDate: String
}

extend type Mutation{
    createPost(input: CreatePostInput!): PostOutput
    updatePost(input: UpdatePostInput!) : PostOutput
    deletePost(id : Int!) : Int!
}
type Query{
    findAllPosts: [Post]
    findAllPost : [PostOutput]
    findPostByPostId(id: Int): PostOutput
    #    findAllPostsByUploaderId(uploader_id: Int):[Post]
#    findPostByPostId(id: Int): Post
    findRecentPosts: [RecentPostResponse]
#    findAllPostsByUploaderId(uploader_id: Int):[Post]
#    findElAllPosts: [Post]
}
