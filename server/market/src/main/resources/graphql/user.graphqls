type User {
    userId : ID!
    name : String!
    email : String
    imageUrl : String!
    provider : String!
    providerId : Int!
    phone : String!
    address : String!
    trust : Int!
}

type LoginUserOutput {
    token : String!
}

type UserInfoOutput {
    name : String
    address : String
    trust : Int
    numOfPosts : Int
}

input LoginUserInput {
    provider : String!
    token : String!
}

extend type Query {
#    findAllUsers: [User]
    findUserInfo: UserInfoOutput
#    findUserHistory: [Post]
}

extend type Mutation {
    loginUser(input : LoginUserInput!): LoginUserOutput
}